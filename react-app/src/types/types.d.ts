export interface ChatMessage {
  /** The role associated with this message payload. */
  role: 'assistant' | 'user' | 'system';
  /** The text associated with this message payload. */
  content: string | null;
  /**
   * The name of the author of this message. `name` is required if role is `function`, and it should be the name of the
   * function whose response is in the `content`. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of
   * 64 characters.
   */
  name?: string;
  /** The name and arguments of a function that should be called, as generated by the model. */
  functionCall?: FunctionCall;
  /**
   *   Additional context data associated with a chat message when requesting chat completions using compatible Azure
   *   OpenAI chat extensions. This includes information like the intermediate data source retrievals used to service a
   *   request.
   *   This context information is only populated when using Azure OpenAI with chat extensions capabilities configured.
   */
  context?: AzureChatExtensionsMessageContext;
}

export interface ResposeCompletion {
  id: string;
  object: string;
  created: number;
  model: string;
  choices: {
    index: number;
    message: ChatMessage; // Ahora `message` es un array de objetos ChatMessage
    finish_reason: string;
  }[];
  usage: {
    prompt_tokens: number;
    completion_tokens: number;
    total_tokens: number;
  };
}


export interface OpenAIPromts {
  messages: { role: string; content: string }[];
}

export interface responseEvent {
  type: string
  value: ResposeCompletion
}


